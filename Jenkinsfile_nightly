#!groovy

properties([
        pipelineTriggers([cron('15 01 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'URL_TO_TEST', defaultValue: 'https://manage-case.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
                string(name: 'SecurityRules',
                        defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                        description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure")

def type = "java"
def product = "ethos"
def component = "repl-docmosis-backend"

def secrets = [
        "ethos-${params.ENVIRONMENT}": [
                secret('ccd-user-email', 'CCD_CASEWORKER_E2E_EMAIL'),
                secret('ccd-user-password', 'CCD_CASEWORKER_E2E_PASSWORD'),
                secret('ethos-repl-service-s2s-secret', 'SERVICE_SECRET'),
                secret('idam-client-secret', 'IDAM_CLIENT_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.TEST_E2E_URL = params.URL_TO_TEST
    env.RUNNING_ENV = params.ENVIRONMENT

    loadVaultSecrets(secrets)
    enableFullFunctionalTest()
//    enableFortifyScan()

    after('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'

        publishHTML target: [
                allowMissing : true,
                alwaysLinkToLastBuild: true,
                keepAll : true,
                reportDir : "functional-output",
                reportFiles : "ecm-e2e-result.html",
                reportName : "ECM E2E tests result"
        ]
    }

//    after('fortify-scan') {
//        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
//    }

}
