plugins {
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '2.7.18'
    id 'org.owasp.dependencycheck' version '9.1.0'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'au.com.dius.pact' version '4.3.15'
    id 'io.freefair.lombok' version '8.6'
}

group = 'uk.gov.hmcts.ethos.replacement'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}

checkstyle {
    maxWarnings = 2302
    toolVersion = '10.21.1'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

def sonarExclusions = ['**/uk/gov/hmcts/ethos/replacement/docmosis/config/**',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis/model/**',
                       '**/uk/gov/hmcts/reform/ethos/replacement/docmosis/CaseOrchestrationApplication',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis.config.DevQueueClient.java',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis/util/**',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis/service/DocumentManagementService.java',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis/controllers/CaseActionsForCaseWorkerController.java'
]

sonarqube {
    properties {
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.projectKey", "ethos-repl-docmosis-service"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sourceSets {
    test {
        java.srcDir 'src/test/java'
    }
    functional {
        java.srcDir 'src/test/functional/java'
        resources.srcDir 'src/test/functional/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            java.srcDir 'src/test/contractTest/java'
            resources.srcDir 'src/test/contractTest/resources'
        }
        resources.srcDir file('src/test/contractTest/resources')
    }
}

configurations {
    functionalImplementation.extendsFrom testImplementation
    functionalRuntimeOnly.extendsFrom testRuntimeOnly
    contractTestImplementation.extendsFrom testImplementation
    contractTestRuntimeOnly.extendsFrom testRuntimeOnly
}

test {
    useJUnitPlatform()
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification', dependsOn: ':codeceptSmoke') {
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = sourceSets.functional.runtimeClasspath

    useJUnit {
        includeCategories 'uk.gov.hmcts.ethos.replacement.functional.SmokeTest'
    }
    systemProperty('VAULTNAME', System.getenv('VAULTNAME'))
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification', dependsOn: ':codeceptFunctional') {
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = sourceSets.functional.runtimeClasspath

    useJUnit {
        includeCategories 'uk.gov.hmcts.ethos.replacement.functional.SmokeTest'
    }

    systemProperty('VAULTNAME', System.getenv('VAULTNAME'))
    maxHeapSize = '1G'
}

task yarnInstall(type: Exec) {
    workingDir '.'
    commandLine 'yarn', 'install'
}

task codeceptSmoke(type: Exec, dependsOn: ':yarnInstall') {
    commandLine 'echo', 'smoketest'
//    commandLine './node_modules/codeceptjs/bin/codecept.js', 'run', '-c', './src/test/end-to-end/', '--grep', '@smoke', '--reporter', 'mocha-multi'
}

task codeceptFunctional(type: Exec, dependsOn :'yarnInstall') {
    commandLine 'echo', 'functionaltest'
//    commandLine './node_modules/codeceptjs/bin/codecept.js', 'run', '-c', './src/test/end-to-end/', '--grep', '@temp-disable', '--reporter', 'mocha-multi'
}

task crossbrowser(dependsOn: ':codeceptFunctionalSauce') {
    group = 'Delivery pipeline'
    description = 'Execute cross browser tests on saucelabs'
}

task nightlyFunctional(dependsOn: ':codeceptFunctionalNightly') {
    group = 'Delivery pipeline'
    description = 'Execute Functional Tests on nightly pipeline'
}

task codeceptFunctionalSauce(type: Exec, dependsOn: ':yarnInstall') {
    workingDir '.'
    commandLine './node_modules/codeceptjs/bin/codecept.js', 'run-multiple', '--all', '--config', './src/test/end-to-end/saucelabs.conf.js', '--grep', '@xb', '--verbose', '--debug', '--reporter', 'mocha-multi'
}

task codeceptFunctionalNightly(type: Exec, dependsOn :'yarnInstall') {
    commandLine './node_modules/codeceptjs/bin/codecept.js', 'run', '-c', './src/test/end-to-end/', '--grep', '@nightly', '--steps', '--reporter', 'mocha-multi'
}

project.ext {
    pacticipant = 'ethos_replDocmosisService'
    pacticipantVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --shirt HEAD'.execute().text.trim()
}

task runContractTests(type: Test, description: 'Runs contract tests.', group: 'Verification') {
    onlyIf {
        return System.env.SKIP_CONTRACT_TESTS == null || System.env.SKIP_CONTRACT_TESTS == 'false'
    }
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.rootDir', "pacts"
    testLogging.showStandardStreams = true
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
    logger.lifecycle("Runs pact consumer Tests")

    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

rootProject.tasks.named("processContractTestResources") {
    duplicatesStrategy = 'include'
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

pact {
    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    }
    publish {
        pactDirectory = 'pacts'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pacticipantVersion
    }
}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'
    analyzers.assemblyEnabled = false
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

ext {
    junitJupiterVersion = '5.10.3'
    log4JVersion = '2.23.1'
    serenity = '3.9.8'
    tomcatEmbedVersion = '9.0.98'
    springCloudVersion = '2021.0.8'
}

ext["rest-assured.version"] = '5.1.0'

dependencyManagement {
    dependencies {
        dependencySet(group: 'com.google.guava', version: '33.1.0-jre') {
            entry 'guava'
        }
        dependencySet(group: 'io.netty', version: '4.1.117.Final') {
            entry 'netty-all'
            entry 'netty-buffer'
            entry 'netty-codec'
            entry 'netty-codec-http'
            entry 'netty-codec-http2'
            entry 'netty-codec-socks'
            entry 'netty-common'
            entry 'netty-handler'
            entry 'netty-handler-proxy'
            entry 'netty-resolver'
            entry 'netty-transport'
            entry 'netty-transport-native-epoll'
            entry 'netty-transport-native-kqueue'
            entry 'netty-transport-native-unix-common'
            entry 'netty-resolver-dns-native-macos'
            entry 'netty-codec-dns'
            entry 'netty-codec-haproxy'
            entry 'netty-codec-memcache'
            entry 'netty-codec-mqtt'
            entry 'netty-codec-redis'
            entry 'netty-codec-smtp'
            entry 'netty-codec-stomp'
            entry 'netty-codec-xml'
            entry 'netty-resolver-dns'
            entry 'netty-transport-rxtx'
            entry 'netty-transport-sctp'
            entry 'netty-transport-udt'
            entry 'netty-transport-classes-epoll'
            entry 'netty-transport-classes-kqueue'
        }
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    implementation group: 'com.github.hmcts', name: 'ecm-common', version: '2.1.0'
    implementation group: 'com.github.hmcts', name: 'ecm-data-model', version: '1.3.12'
    implementation group: 'com.github.hmcts', name: 'et-data-model', version: '4.0.1'
    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: '1.7.3'
    implementation group: 'com.github.hmcts', name: 'document-management-client', version: '7.0.1'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: '6.1.7'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.48'
    implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.26.2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '3.0.3'
    implementation group: 'org.apache.santuario', name: 'xmlsec', version: '4.0.3'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: tomcatEmbedVersion
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: tomcatEmbedVersion
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.13'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.13'
    implementation group: 'ch.qos.logback', name: 'logback-access', version: '1.4.14'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
    implementation group: 'org.apache.xmlgraphics', name: 'batik-all', version: '1.17', ext: 'pom'
    implementation group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: '2.9'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'

    implementation('org.elasticsearch:elasticsearch') {
        version {
            strictly '7.17.3'
        }
    }
    implementation 'org.postgresql:postgresql:42.7.5'
    implementation group: 'org.slf4j', name: 'slf4j-ext', version: '2.0.16'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.8.0'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.retry:spring-retry'
    implementation group: 'org.webjars.npm', name: 'minimatch', version: '9.0.5'
    implementation group: 'org.asynchttpclient', name: 'async-http-client', version: '2.12.4'
    implementation group: 'org.asynchttpclient', name: 'async-http-client-netty-utils', version: '2.12.4'

    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.4'
    implementation group: 'com.fasterxml.woodstox', name: 'woodstox-core', version: '6.7.0'
    implementation group: 'com.squareup.okio', name: 'okio', version: '3.9.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
    testImplementation 'com.github.hmcts:fortify-client:1.4.6:all'
    testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
    testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: serenity, {
        exclude module: 'jaxb-osgi'
    }
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: serenity
    testImplementation (group: 'org.docx4j', name: 'docx4j', version: '6.1.2') {
        exclude module: 'slf4j-log4j12'
    }
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitJupiterVersion
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Contract Tests
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.6.6'
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.43'
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.18'
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    contractTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.10.3'
    contractTestImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.2'
    contractTestImplementation group: 'org.springframework.cloud', name: 'spring-cloud-netflix-ribbon', version: '2.2.10.RELEASE'
    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath
}

bootJar {
    getArchiveFileName().set(provider {
        'ethos-repl-docmosis-service.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
